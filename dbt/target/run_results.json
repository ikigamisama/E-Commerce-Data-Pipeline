{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-18T15:27:17.236613Z", "invocation_id": "b4e3e705-c444-440f-9a36-f0c71cfb9177", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.223011Z", "completed_at": "2025-06-18T15:27:16.247706Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.251025Z", "completed_at": "2025-06-18T15:27:16.597155Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4125666618347168, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "message": "SELECT 0", "failures": null, "unique_id": "model.medallion_dbt.geography_dim", "compiled": true, "compiled_code": "\n\nSELECT\n    ROW_NUMBER() OVER (ORDER BY geolocation_city, geolocation_region) AS geo_key,\n    geolocation_city,\n    geolocation_region,\n    geolocation_lat,\n    geolocation_lng,\n    processed_at\nFROM \"e_commerce\".\"silver\".\"geolocations\"", "relation_name": "\"e_commerce\".\"gold\".\"geography_dim\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.213141Z", "completed_at": "2025-06-18T15:27:16.249785Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.337826Z", "completed_at": "2025-06-18T15:27:16.619447Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.438281774520874, "adapter_response": {"_message": "SELECT 2192", "code": "SELECT", "rows_affected": 2192}, "message": "SELECT 2192", "failures": null, "unique_id": "model.medallion_dbt.dates_dim", "compiled": true, "compiled_code": "\n\n\n    -- PostgreSQL branch remains unchanged\n    WITH date_spine AS (\n        SELECT \n            generate_series(\n                '2020-01-01'::DATE,\n                '2025-12-31'::DATE,\n                INTERVAL '1 day'\n            ) AS date_day\n    )\n\n    SELECT\n        date_day,\n        EXTRACT(YEAR FROM date_day) AS year,\n        EXTRACT(MONTH FROM date_day) AS month,\n        EXTRACT(DAY FROM date_day) AS day,\n        EXTRACT(DOW FROM date_day) + 1 AS day_of_week,  -- 1 = Monday, 7 = Sunday\n        EXTRACT(DOY FROM date_day) AS day_of_year,\n        EXTRACT(WEEK FROM date_day) AS week_of_year,\n        EXTRACT(QUARTER FROM date_day) AS quarter,\n        TO_CHAR(date_day, 'YYYY-MM') AS year_month,\n        TO_CHAR(date_day, 'YYYY-\"Q\"Q') AS year_quarter,\n        TRIM(TO_CHAR(date_day, 'Day')) AS day_name,\n        TRIM(TO_CHAR(date_day, 'Month')) AS month_name,\n        CASE \n            WHEN EXTRACT(DOW FROM date_day) IN (0, 6) THEN TRUE \n            ELSE FALSE \n        END AS is_weekend,\n        CASE \n            WHEN EXTRACT(DOW FROM date_day) BETWEEN 1 AND 5 THEN TRUE \n            ELSE FALSE \n        END AS is_weekday,\n        CASE \n            WHEN EXTRACT(DAY FROM date_day) = 1 THEN TRUE \n            ELSE FALSE \n        END AS is_month_start,\n        CASE \n            WHEN date_day = (date_trunc('month', date_day) + INTERVAL '1 MONTH' - INTERVAL '1 day')::DATE THEN TRUE \n            ELSE FALSE \n        END AS is_month_end\n    FROM date_spine\n", "relation_name": "\"e_commerce\".\"gold\".\"dates_dim\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.201872Z", "completed_at": "2025-06-18T15:27:16.248725Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.283079Z", "completed_at": "2025-06-18T15:27:16.634800Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.450516939163208, "adapter_response": {"_message": "SELECT 20000", "code": "SELECT", "rows_affected": 20000}, "message": "SELECT 20000", "failures": null, "unique_id": "model.medallion_dbt.customers_dim", "compiled": true, "compiled_code": "\n\nSELECT\n    customer_id,\n    customer_unique_id,\n    customer_name,\n    customer_age,\n    customer_gender,\n    customer_city,\n    customer_region,\n    signup_date,\n    \n    -- Age group classification\n    CASE\n        WHEN customer_age BETWEEN 18 AND 25 THEN 'YOUNG_ADULT'\n        WHEN customer_age BETWEEN 26 AND 35 THEN 'ADULT'\n        WHEN customer_age BETWEEN 36 AND 50 THEN 'MIDDLE_AGED'\n        WHEN customer_age > 50 THEN 'SENIOR'\n        ELSE 'UNKNOWN'\n    END AS age_group,\n\n    -- Tenure logic per warehouse\n    \n        (CURRENT_DATE - signup_date::DATE) AS days_since_signup,\n        CASE\n            WHEN (CURRENT_DATE - signup_date::DATE) <= 30 THEN 'NEW'\n            WHEN (CURRENT_DATE - signup_date::DATE) <= 365 THEN 'RECENT'\n            ELSE 'ESTABLISHED'\n        END AS customer_tenure,\n    \n\n    CURRENT_TIMESTAMP AS processed_at\n\nFROM \"e_commerce\".\"silver\".\"customers\"", "relation_name": "\"e_commerce\".\"gold\".\"customers_dim\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.228804Z", "completed_at": "2025-06-18T15:27:16.261863Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.352162Z", "completed_at": "2025-06-18T15:27:16.667925Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4795036315917969, "adapter_response": {"_message": "SELECT 12620", "code": "SELECT", "rows_affected": 12620}, "message": "SELECT 12620", "failures": null, "unique_id": "model.medallion_dbt.order_items_facts", "compiled": true, "compiled_code": "\n\nSELECT\n    oi.order_id,\n    oi.order_item_id,\n    oi.product_id,\n    oi.seller_id,\n    o.customer_id,\n\n    \n        DATE_TRUNC('day', o.order_purchase_timestamp::timestamp) AS order_date,\n    \n\n    -- Item financial metrics\n    oi.price AS item_price,\n    oi.freight_value,\n    oi.discount_pct,\n    oi.discounted_price,\n    oi.total_item_cost,\n\n    -- Derived metrics\n    oi.price - oi.discounted_price AS discount_amount,\n    CASE \n        WHEN oi.price > 0 \n        THEN (oi.price - oi.discounted_price) / oi.price * 100\n        ELSE 0 \n    END AS effective_discount_pct,\n\n    -- Shipping analysis\n    CASE\n        WHEN oi.freight_value = 0 THEN 'FREE_SHIPPING'\n        WHEN oi.freight_value <= 10 THEN 'LOW_SHIPPING'\n        WHEN oi.freight_value <= 30 THEN 'MEDIUM_SHIPPING'\n        ELSE 'HIGH_SHIPPING'\n    END AS shipping_category,\n\n    -- Coupon usage\n    (oi.coupon_applied IS NOT NULL AND CAST(oi.coupon_applied AS VARCHAR) NOT IN ('NONE', '')) AS coupon_used,\n\n    CURRENT_TIMESTAMP AS processed_at\n\nFROM \"e_commerce\".\"silver\".\"order_items\" oi\nJOIN \"e_commerce\".\"silver\".\"orders\" o \n    ON oi.order_id = o.order_id", "relation_name": "\"e_commerce\".\"gold\".\"order_items_facts\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.687558Z", "completed_at": "2025-06-18T15:27:16.717942Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.720164Z", "completed_at": "2025-06-18T15:27:16.875496Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2026350498199463, "adapter_response": {"_message": "SELECT 6003", "code": "SELECT", "rows_affected": 6003}, "message": "SELECT 6003", "failures": null, "unique_id": "model.medallion_dbt.payments_facts", "compiled": true, "compiled_code": "\n\nSELECT\n    p.order_id,\n    p.payment_type,\n    p.payment_category,\n    p.payment_status,\n    \n    -- Payment aggregations\n    COUNT(*) AS payment_count,\n    SUM(p.payment_value) AS total_payment_value,\n    AVG(p.payment_value) AS avg_payment_value,\n    MAX(p.payment_installments) AS max_installments,\n    AVG(p.payment_installments) AS avg_installments,\n    \n    -- Payment analysis\n    CASE \n        WHEN COUNT(*) = 1 THEN 'SINGLE_PAYMENT_METHOD'\n        ELSE 'MULTIPLE_PAYMENT_METHODS'\n    END AS payment_complexity,\n    \n    CURRENT_TIMESTAMP AS processed_at\n\nFROM \"e_commerce\".\"silver\".\"payments\" p\nGROUP BY \n    p.order_id,\n    p.payment_type,\n    p.payment_category,\n    p.payment_status", "relation_name": "\"e_commerce\".\"gold\".\"payments_facts\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.725085Z", "completed_at": "2025-06-18T15:27:16.745665Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.748394Z", "completed_at": "2025-06-18T15:27:16.926278Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.21176457405090332, "adapter_response": {"_message": "SELECT 20000", "code": "SELECT", "rows_affected": 20000}, "message": "SELECT 20000", "failures": null, "unique_id": "model.medallion_dbt.products_dim", "compiled": true, "compiled_code": "\n\nSELECT\n    product_id,\n    product_name,\n    product_category_name,\n    product_description,\n    product_price,\n    product_photos_qty,\n    product_weight_g,\n    product_length_cm,\n    product_height_cm,\n    product_width_cm,\n    product_volume_cm3,\n    CASE\n        WHEN product_price <= 50 THEN 'LOW'\n        WHEN product_price <= 200 THEN 'MEDIUM'\n        WHEN product_price <= 500 THEN 'HIGH'\n        ELSE 'PREMIUM'\n    END AS price_range,\n    CASE\n        WHEN product_weight_g <= 500 THEN 'LIGHT'\n        WHEN product_weight_g <= 2000 THEN 'MEDIUM'\n        WHEN product_weight_g <= 5000 THEN 'HEAVY'\n        ELSE 'VERY_HEAVY'\n    END AS weight_category,\n    CASE\n        WHEN product_photos_qty = 0 THEN 'NO_PHOTOS'\n        WHEN product_photos_qty <= 3 THEN 'FEW_PHOTOS'\n        WHEN product_photos_qty <= 6 THEN 'GOOD_PHOTOS'\n        ELSE 'MANY_PHOTOS'\n    END AS photo_quality,\n    processed_at\nFROM \"e_commerce\".\"silver\".\"products\"", "relation_name": "\"e_commerce\".\"gold\".\"products_dim\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.658948Z", "completed_at": "2025-06-18T15:27:16.686771Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.695328Z", "completed_at": "2025-06-18T15:27:16.937200Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.30431699752807617, "adapter_response": {"_message": "SELECT 5000", "code": "SELECT", "rows_affected": 5000}, "message": "SELECT 5000", "failures": null, "unique_id": "model.medallion_dbt.orders_facts", "compiled": true, "compiled_code": "\n\nSELECT\n    o.order_id,\n    o.customer_id,\n\n    \n        DATE_TRUNC('day', o.order_purchase_timestamp::timestamp) AS order_date,\n    \n\n    o.order_status,\n    o.delivery_performance,\n    o.delivery_days,\n\n    -- Aggregated order metrics\n    COUNT(oi.order_item_id) AS total_items,\n    SUM(oi.price) AS gross_item_value,\n    SUM(oi.freight_value) AS total_freight,\n    SUM(oi.discount_pct * oi.price / 100.0) AS total_discount_amount,\n    SUM(oi.discounted_price) AS net_item_value,\n    SUM(oi.total_item_cost) AS total_order_value,\n\n    -- Seller metrics\n    COUNT(DISTINCT oi.seller_id) AS unique_sellers,\n\n    -- Product metrics\n    COUNT(DISTINCT oi.product_id) AS unique_products,\n\n    -- Calculated metrics\n    CASE \n        WHEN COUNT(oi.order_item_id) > 0 \n        THEN SUM(oi.total_item_cost) / COUNT(oi.order_item_id)\n        ELSE 0 \n    END AS avg_item_value,\n\n    CASE \n        WHEN SUM(oi.price) > 0 \n        THEN SUM(oi.discount_pct * oi.price / 100.0) / SUM(oi.price) * 100\n        ELSE 0 \n    END AS avg_discount_pct,\n\n    CURRENT_TIMESTAMP AS processed_at\n\nFROM \"e_commerce\".\"silver\".\"orders\" o\nLEFT JOIN \"e_commerce\".\"silver\".\"order_items\" oi \n    ON o.order_id = oi.order_id\n\nGROUP BY \n    o.order_id,\n    o.customer_id,\n\n    \n        DATE_TRUNC('day', o.order_purchase_timestamp::timestamp),\n    \n\n    o.order_status,\n    o.delivery_performance,\n    o.delivery_days", "relation_name": "\"e_commerce\".\"gold\".\"orders_facts\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.701602Z", "completed_at": "2025-06-18T15:27:16.724199Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.730100Z", "completed_at": "2025-06-18T15:27:17.027310Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3457481861114502, "adapter_response": {"_message": "SELECT 12603", "code": "SELECT", "rows_affected": 12603}, "message": "SELECT 12603", "failures": null, "unique_id": "model.medallion_dbt.product_performance_facts", "compiled": true, "compiled_code": "\n\nWITH product_sales AS (\n    SELECT\n        p.product_id,\n        p.product_category_name,\n\n        \n            DATE_TRUNC('month', o.order_purchase_timestamp::timestamp)  AS month_year,\n        \n\n        COUNT(DISTINCT oi.order_id) AS orders_count,\n        COUNT(oi.order_item_id) AS items_sold,\n        COUNT(DISTINCT oi.seller_id) AS unique_sellers,\n        COUNT(DISTINCT o.customer_id) AS unique_customers,\n\n        SUM(oi.price) AS gross_revenue,\n        SUM(oi.discounted_price) AS net_revenue,\n        SUM(oi.total_item_cost) AS total_revenue,\n\n        AVG(oi.price) AS avg_selling_price,\n        MIN(oi.price) AS min_selling_price,\n        MAX(oi.price) AS max_selling_price,\n        AVG(oi.discount_pct) AS avg_discount_pct\n    FROM \"e_commerce\".\"silver\".\"products\" p\n    JOIN \"e_commerce\".\"silver\".\"order_items\" oi \n        ON p.product_id = oi.product_id\n    JOIN \"e_commerce\".\"silver\".\"orders\" o \n        ON oi.order_id = o.order_id\n    GROUP BY \n        p.product_id,\n        p.product_category_name,\n        \n            DATE_TRUNC('month', o.order_purchase_timestamp::timestamp) \n        \n),\ncategory_totals AS (\n    SELECT\n        product_category_name,\n        month_year,\n        SUM(net_revenue) AS category_net_revenue,\n        SUM(items_sold) AS category_volume\n    FROM product_sales\n    GROUP BY product_category_name, month_year\n)\n\nSELECT \n    ps.*,\n    ps.net_revenue * 100.0 / ct.category_net_revenue AS category_revenue_share,\n    ps.items_sold * 100.0 / ct.category_volume AS category_volume_share,\n    CURRENT_TIMESTAMP AS processed_at\n\nFROM product_sales ps\nJOIN category_totals ct \n    ON ps.product_category_name = ct.product_category_name\n   AND ps.month_year = ct.month_year", "relation_name": "\"e_commerce\".\"gold\".\"product_performance_facts\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.966677Z", "completed_at": "2025-06-18T15:27:16.997303Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.999508Z", "completed_at": "2025-06-18T15:27:17.109493Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.15279293060302734, "adapter_response": {"_message": "SELECT 5000", "code": "SELECT", "rows_affected": 5000}, "message": "SELECT 5000", "failures": null, "unique_id": "model.medallion_dbt.sellers_dim", "compiled": true, "compiled_code": "\n\nSELECT\n    seller_id,\n    seller_category_specialization,\n    seller_rating,\n    seller_rating_category,\n    seller_fulfillment_type,\n    seller_city,\n    seller_state,\n    seller_signup_date,\n\n    \n        (CURRENT_DATE - seller_signup_date) AS days_active,\n        CASE\n            WHEN CURRENT_DATE - seller_signup_date <= 90 THEN 'NEW_SELLER'\n            WHEN CURRENT_DATE - seller_signup_date <= 365 THEN 'RECENT_SELLER'\n            ELSE 'ESTABLISHED_SELLER'\n        END AS seller_tenure,\n    \n\n    CURRENT_TIMESTAMP AS processed_at\n\nFROM \"e_commerce\".\"silver\".\"sellers\"", "relation_name": "\"e_commerce\".\"gold\".\"sellers_dim\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-18T15:27:16.911366Z", "completed_at": "2025-06-18T15:27:16.933830Z"}, {"name": "execute", "started_at": "2025-06-18T15:27:16.938257Z", "completed_at": "2025-06-18T15:27:17.203818Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.29967546463012695, "adapter_response": {"_message": "SELECT 12564", "code": "SELECT", "rows_affected": 12564}, "message": "SELECT 12564", "failures": null, "unique_id": "model.medallion_dbt.seller_performance_facts", "compiled": true, "compiled_code": "\n\nSELECT\n    s.seller_id,\n    \n        DATE_TRUNC('month', o.order_purchase_timestamp::timestamp)  AS month_year,\n    \n\n    -- Volume metrics\n    COUNT(DISTINCT oi.order_id) AS orders_count,\n    COUNT(oi.order_item_id) AS items_sold,\n    COUNT(DISTINCT oi.product_id) AS unique_products_sold,\n    COUNT(DISTINCT o.customer_id) AS unique_customers,\n    \n    -- Revenue metrics\n    SUM(oi.price) AS gross_revenue,\n    SUM(oi.discounted_price) AS net_revenue,\n    SUM(oi.freight_value) AS freight_revenue,\n    SUM(oi.total_item_cost) AS total_revenue,\n    \n    -- Performance metrics\n    AVG(oi.price) AS avg_item_price,\n    AVG(oi.discount_pct) AS avg_discount_pct,\n    \n    -- Delivery performance\n    COUNT(CASE WHEN o.delivery_performance = 'ON_TIME' THEN 1 END) AS on_time_deliveries,\n    COUNT(CASE WHEN o.delivery_performance = 'LATE' THEN 1 END) AS late_deliveries,\n    \n    CASE \n        WHEN COUNT(CASE WHEN o.delivery_performance IN ('ON_TIME', 'LATE') THEN 1 END) > 0\n        THEN COUNT(CASE WHEN o.delivery_performance = 'ON_TIME' THEN 1 END) * 100.0 / \n             COUNT(CASE WHEN o.delivery_performance IN ('ON_TIME', 'LATE') THEN 1 END)\n        ELSE NULL\n    END AS on_time_delivery_rate,\n    \n    CURRENT_TIMESTAMP AS processed_at\n\nFROM \"e_commerce\".\"silver\".\"sellers\" s\nJOIN \"e_commerce\".\"silver\".\"order_items\" oi \n    ON s.seller_id = oi.seller_id\nJOIN \"e_commerce\".\"silver\".\"orders\" o \n    ON oi.order_id = o.order_id\nGROUP BY \n    s.seller_id,\n    \n        DATE_TRUNC('month', o.order_purchase_timestamp::timestamp) \n    ", "relation_name": "\"e_commerce\".\"gold\".\"seller_performance_facts\"", "batch_results": null}], "elapsed_time": 1.2779407501220703, "args": {"profiles_dir": "/opt/airflow/dbt", "require_explicit_package_overrides_for_builtin_materializations": true, "empty": false, "use_colors": true, "introspect": true, "static_parser": true, "require_batched_execution_for_custom_microbatch_strategy": false, "version_check": false, "log_level_file": "debug", "require_nested_cumulative_type_params": false, "log_file_max_bytes": 10485760, "macro_debugging": false, "use_colors_file": true, "require_yaml_configuration_for_mf_time_spines": false, "log_level": "info", "quiet": false, "require_resource_names_without_spaces": false, "vars": {}, "select": ["tag:gold"], "warn_error_options": {"include": [], "exclude": []}, "log_format": "default", "partial_parse_file_diff": true, "log_format_file": "debug", "state_modified_compare_vars": false, "exclude": [], "partial_parse": true, "invocation_command": "dbt run --project-dir /opt/airflow/dbt --profiles-dir /opt/airflow/dbt --target prod --select tag:gold --no-version-check", "favor_state": false, "skip_nodes_if_on_run_start_fails": false, "cache_selected_only": false, "target": "prod", "defer": false, "indirect_selection": "eager", "print": true, "show_resource_report": false, "source_freshness_run_project_hooks": false, "send_anonymous_usage_stats": true, "strict_mode": false, "project_dir": "/opt/airflow/dbt", "populate_cache": true, "which": "run", "state_modified_compare_more_unrendered_values": false, "write_json": true, "log_path": "/opt/airflow/dbt/logs", "printer_width": 80}}